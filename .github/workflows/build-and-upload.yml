name: build and upload

# Controls when the workflow will run
on:
  # Triggers the workflow on push but only for the main branch
  push:
    branches: [ main ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-farpatch:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        submodules: recursive
        path: farpatch

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install esp-idf dependencies
      run: |
        sudo apt-get update
        sudo apt-get install git wget flex bison gperf python3 python3-venv cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0

    - name: Checkout esp-idf
      uses: actions/checkout@v2
      with:
        repository: espressif/esp-idf
        submodules: recursive
        path: esp-idf

    - name: Install esp-idf
      run: |
        cd esp-idf
        ./install.sh esp32s3,esp32,esp32c3

    - name: Create artifacts directory
      run: |
        mkdir artifacts
        mkdir artifacts/esp32
        mkdir artifacts/esp32s3
        mkdir artifacts/esp32c3

    - name: Build project for ESP32
      run: |
        . esp-idf/export.sh
        cd farpatch
        idf.py set-target esp32
        idf.py build
        cp build/blackmagic.bin                       ../artifacts/esp32/blackmagic.bin
        cp build/blackmagic.elf                       ../artifacts/esp32/blackmagic.elf
        cp build/bootloader/bootloader.bin            ../artifacts/esp32/bootloader.bin
        cp build/partition_table/partition-table.bin  ../artifacts/esp32/partition-table.bin
        cp build/ota_data_initial.bin                 ../artifacts/esp32/ota_data_initial.bin

    - name: Build project for ESP32S3
      run: |
        . esp-idf/export.sh
        cd farpatch
        idf.py set-target esp32s3
        idf.py build
        cp build/blackmagic.bin                       ../artifacts/esp32s3/blackmagic.bin
        cp build/blackmagic.elf                       ../artifacts/esp32s3/blackmagic.elf
        cp build/bootloader/bootloader.bin            ../artifacts/esp32s3/bootloader.bin
        cp build/partition_table/partition-table.bin  ../artifacts/esp32s3/partition-table.bin
        cp build/ota_data_initial.bin                 ../artifacts/esp32s3/ota_data_initial.bin

    - name: Build project for ESP32C3
      run: |
        . esp-idf/export.sh
        cd farpatch
        idf.py set-target esp32c3
        idf.py build
        cp build/blackmagic.bin                       ../artifacts/esp32c3/blackmagic.bin
        cp build/blackmagic.elf                       ../artifacts/esp32c3/blackmagic.elf
        cp build/bootloader/bootloader.bin            ../artifacts/esp32c3/bootloader.bin
        cp build/partition_table/partition-table.bin  ../artifacts/esp32c3/partition-table.bin
        cp build/ota_data_initial.bin                 ../artifacts/esp32c3/ota_data_initial.bin

    - name: Archive firmware build artifacts for ESP32 as a zip
      uses: actions/upload-artifact@v2.2.4
      with:
        name: blackmagic-firmware-esp32.zip
        path: artifacts/esp32/*
        if-no-files-found: error
        
    - name: Archive firmware build artifacts for ESP32S3 as a zip
      uses: actions/upload-artifact@v2.2.4
      with:
        name: blackmagic-firmware-esp32s3.zip
        path: artifacts/esp32s3/*
        if-no-files-found: error

    - name: Archive firmware build artifacts for ESP32C3 as a zip
      uses: actions/upload-artifact@v2.2.4
      with:
        name: blackmagic-firmware-esp32c3.zip
        path: artifacts/esp32c3/*
        if-no-files-found: error
